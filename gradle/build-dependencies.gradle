/*
	================================================================================
	This file contains the all configurations for main dependencies in this project
	================================================================================

	Included from "${rootProject.projectDir}/build.gradle
	================================================================================
 */

repositories {
    repositories {
        mavenCentral()

        [
                "https://plugins.gradle.org/m2/",
                "https://repo.spring.io/milestone"
        ].each { repo ->
            maven {
                url repo
                metadataSources {
                    mavenPom()
                    artifact()
                }
            }
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    // Spring dependencies
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    // Lombok
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    // Resilience4j
    implementation "io.github.resilience4j:resilience4j-spring-boot3"
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker'

    // Data base
    implementation "com.h2database:h2"

    // Support reactive
    implementation 'io.projectreactor:reactor-core'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.8.0'

    // Test
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

}